buildscript {
    repositories {
        jcenter()
    }
    dependencies {
        classpath 'com.github.dcendents:android-maven-gradle-plugin:2.0'
    }
}
apply plugin: 'com.android.library'
apply plugin: 'com.github.dcendents.android-maven'
android {
    compileSdkVersion target_version

    defaultConfig {
        minSdkVersion min_version
        targetSdkVersion target_version

        def projects = rootProject.getProject().getChildProjects()
        projects.each {
            def project = it.value
            if (project.hasProperty('android')) {
                def authority = project.android.defaultConfig.manifestPlaceholders.downloadAuthority
                if (authority) {
                    buildConfigField "String", "DOWNLOAD_AUTHORITY", "\"${authority}\""
                }
            }
        }
    }

    testVariants.all {
        it.mergedFlavor.manifestPlaceholders = [downloadAuthority: "com.novoda.download-manager.android-test"]
    }

    lintOptions {
        abortOnError false
    }
}

dependencies {
    implementation "com.android.support:support-core-utils:$support_version"
    implementation 'com.novoda:notils:2.2.13'
    implementation 'com.squareup.okhttp3:okhttp:3.9.1'
    implementation 'com.evernote:android-job:1.2.2'
    testImplementation 'junit:junit:4.12'
    testImplementation 'org.mockito:mockito-core:2.2.29'
    testImplementation 'org.powermock:powermock-module-junit4:1.6.4'
    testImplementation 'org.powermock:powermock-api-mockito:1.6.4'
    testImplementation 'org.easytesting:fest-assert-core:2.0M10'
    testImplementation 'org.apache.commons:commons-io:1.3.2'
}
apply from: "$project.rootDir/code-quality/android-code-quality.gradle"
