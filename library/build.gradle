apply plugin: 'com.android.library'
apply plugin: 'bintray-release'
apply plugin: 'jacoco'
apply plugin: 'com.novoda.build-properties'

buildProperties {
    cli {
        using(project)
    }
    bintray {
        def bintrayCredentials = {
            boolean isDryRun = cli['dryRun'].or(true).boolean
            return isDryRun ?
                    ['bintrayRepo': 'n/a', 'bintrayUser': 'n/a', 'bintrayKey': 'n/a'] :
                    new File("${System.getenv('BINTRAY_PROPERTIES')}")
        }
        using(bintrayCredentials()).or(cli)
        description = '''This should contain the following properties:
                       | - bintrayRepo: name of the repo of the organisation to deploy the artifacts to
                       | - bintrayUser: name of the account used to deploy the artifacts
                       | - bintrayKey: API key of the account used to deploy the artifacts
        '''.stripMargin()
    }
    publish {
        def generateVersion = {
            boolean isSnapshot = cli['bintraySnapshot'].or(false).boolean
            return isSnapshot ? "SNAPSHOT-${System.getenv('BUILD_NUMBER') ?: 'LOCAL'}" : version
        }
        using(['version': "${generateVersion()}"])
                .or(buildProperties.bintray)
    }
}

android {
    compileSdkVersion 28
    buildToolsVersion '28.0.3'

    defaultConfig {
        minSdkVersion 14
        targetSdkVersion 28
        testInstrumentationRunner "android.support.test.runner.AndroidJUnitRunner"
        javaCompileOptions {
            annotationProcessorOptions {
                arguments = ["room.schemaLocation": "$projectDir/roomSchemas".toString()]
            }
        }
    }

    lintOptions {
        lintConfig teamPropsFile('static-analysis/lint-config.xml')
        abortOnError true
        warningsAsErrors true
    }

    buildTypes {
        release {
            minifyEnabled false
            proguardFiles getDefaultProguardFile('proguard-android.txt'), 'proguard-rules.pro'
        }
    }

    compileOptions {
        sourceCompatibility JavaVersion.VERSION_1_8
        targetCompatibility JavaVersion.VERSION_1_8
    }
}

dependencies {
    annotationProcessor 'android.arch.persistence.room:compiler:1.1.1'
    implementation 'com.novoda:merlin:1.2.1'
    implementation 'com.facebook.stetho:stetho:1.5.0'
    implementation 'com.squareup.okhttp3:okhttp:3.12.1'
    implementation('android.arch.persistence.room:runtime:1.1.1') {
        exclude group: 'com.android.support', module: 'support-v4'
        exclude group: 'android.arch.core', module: 'runtime'
    }
    implementation 'com.evernote:android-job:1.2.6'
    implementation 'net.sourceforge.findbugs:annotations:1.3.2'
    testImplementation 'junit:junit:4.12'
    testImplementation 'org.mockito:mockito-core:2.23.4'
    testImplementation 'com.google.truth:truth:0.42'
}

publish {
    userOrg = 'novoda'
    repoName = buildProperties.publish['bintrayRepo'].string
    groupId = 'com.novoda'
    artifactId = 'download-manager'
    version = buildProperties.publish['version'].string
    bintrayUser = buildProperties.publish['bintrayUser'].string
    bintrayKey = buildProperties.publish['bintrayKey'].string
    publishVersion = version
    uploadName = 'download-manager'
    desc = 'A library that handles long-running downloads'
    website = 'https://github.com/novoda/download-manager'
}
